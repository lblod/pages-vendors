<AuHeading @level="1" @skin="1">Berichtencentrum API <em>[DRAFT]</em></AuHeading>
<p>
  Lokale besturen en ABB kunnen beveiligde berichten met mekaar uitwisselen. Het loket voor Lokale Besturen biedt een API aan waarop deze functionaliteit programmatorisch ge&iuml;ntegreerd kan worden. Dit document beschrijft de API voor het berichtencentrum.
</p>

<AuHeading @level="2" @skin="2">High level beschrijving van de flow</AuHeading>
<p>
  Het Berichtencentrum bestaat uit Conversaties en Berichten. Een conversatie bestaat uit verschillende berichten; een conversatie is een zogenaamde 'thread'. Momenteel kan enkel ABB conversaties initi&euml;ren, en kunnen besturen enkel reageren. De beschikbare conversaties en berichten kunnen bevraagd worden aan de hand van <AuLink @route="docs.vendor-sparql">Vendor SPARQL API</AuLink>. Meer details over de query's volgen hieronder. In geval er een nieuw bericht naar ABB moet worden gestuurd, publiceert het bestuur een RDFa-geannoteerd document. Via een REST call meldt het bestuur de locatie van de nieuwe publicatie aan het loket, en zal de crawler van het loket het document ophalen. Het melden van een bericht zal een <CodeInline @code="cogs:Job" /> aanmaken. Hiermee kan de vendor of het bestuur de status van de melding opvolgen. De flow is heel gelijkaardig aan die van de <AuLink @route="docs.meldingsplicht">Meldingsplicht API</AuLink>.
</p>

<AuHeading @level="2" @skin="2" id="publicatie-documenten">Publicatie van berichten</AuHeading>
<p>
  Het bestuur dat een bericht wil sturen in Loket publiceert een, via authenticatie beschermd, RDFa document. De publieke URL voor dit document moet worden meegegeven in een REST call naar Loket zodat een crawler het document kan inlezen en verwerken.
</p>
<AuHeading @level="3" @skin="3">Vereisten voor gepubliceerde pagina's</AuHeading>
<p>
  Zie <AuLink @route="docs.meldingsplicht">Meldingsplicht API</AuLink>.
</p>
<AuHeading @level="3" @skin="3">Organiseren van gepubliceerde pagina's</AuHeading>
<p>
  De crawler verwacht bij het ophalen van de RDFa-informatie dat de resource -gespecifieerd met het <CodeInline @code="resource" /> veld in de json-body- volledig beschreven staat op de pagina gespecifieerd in het <CodeInline @code="href" /> veld. De crawler verwacht dat de RDFa beschrijving van het veld <CodeInline @code="nie:url" /> een rechtstreekse link is naar het bestand. (Indien content-negotiation gewenst is, kunnen de annotaties makkelijk uitgebreid worden. Laat gerust weten.) Verder zijn er geen echt harde restricties, behalve dat we niet verwachten dat de grootte van de pagina's te groot wordt. (Nader te bepalen wat de harde grens zou zijn; een HTML bestand van 20+MB beschouwen we al als groot.) Goede vertrouwelijkheidshygi&euml;ne is wenselijk, bijvoorbeeld: niet de berichten van alle besturen in beheer op één pagina publiceren. Technisch kan het, maar het vergroot het risico.
</p>
<AuHeading @level="3" @skin="3">RDFa voorbeeldpublicatie van bericht</AuHeading>
<p>
  Het volgende voorbeeld illustreert hoe een bericht in RDFa wordt gepubliceerd. Dit is een zeer minimaal voorbeeld. Evengoed kan dit uitgebreid worden om het ook bruikbaar te maken voor zowel menselijke gebruikers als machines. Het staat het bestuur dus zeker vrij om extra annotaties toe te voegen.
</p>
<SnippetToggle @snippetFilename="berichtencentrum/voorbeeld-rdfa-bericht.html" />

<AuHeading @level="2" @skin="2">Melden van een nieuw bericht</AuHeading>
<p>
  Het melden van een nieuw bericht gebeurt via een request via
</p>
<CodeBlock @code="POST https://api.loket.lokaalbestuur.vlaanderen.be/vendor/berichtencentrum/melding" />
<p>
  met als JSON-LD request body:
</p>
<Snippet @snippetFilename="berichtencentrum/voorbeeld-melding-body.js" />
<p class="au-u-para-small au-u-muted">
  Annotaties die gebruikt kunnen worden bij de gepubliceerde pagina worden verder besproken.
</p>
<p>
  Het aanvragen van een publisher URI en een geheime sleutel (key) wordt beschreven in de sectie 'Authenticatie' van de <AuLink @route="docs.meldingsplicht">Meldingsplicht API</AuLink>. Verder verwachten we dat het gepubliceerde document beschermd is met authenticatie. Voor meer informatie over welke methodes de crawler ondersteunt, verwijzen we u door naar de sectie 'Ophalen van niet-publieke documenten' van de <AuLink @route="docs.meldingsplicht">Meldingsplicht API</AuLink>. Een antwoord van het endpoint wordt dan, indien de eerste ronde van validatie OK is:
</p>
<CodeBlock @code='{ "job": "http://data.lblod.info/id/job/example-uri" }' />
<p>
  Indien er zaken niet in orde zijn, kan u terugvallen op de standaard HTTP-codes en error-boodschappen.
</p>
<AuHeading @level="3" @skin="3">JSON-LD context</AuHeading>
<p>
  Zie <AuLink @route="docs.meldingsplicht">Meldingsplicht API</AuLink>.
</p>
<AuHeading @level="3" @skin="3">Voorbeeld-request om nieuw bericht te melden</AuHeading>
<p>
  Voortgaand op het vorige voorbeeld, geven we weer hoe een request naar loket er zou kunnen uitzien. Stel dat de RDFa geannoteerde pagina gehost staat op <CodeInline @code="http://vendor.example.com/conversaties/bestuur/1" />. Uit vorige voorbeeld is de URI van het nieuwe bericht <CodeInline @code="http://nieuw/berichturi/voor/ABB" />. Dan kan het request er als volgt uitzien:
</p>
<SnippetToggle @snippetFilename="berichtencentrum/voorbeeld-melding.sh" />
<p>
  Noteer dat meerdere authenticatiemogelijkheden beschikbaar zijn, niet alleen basic auth.
</p>

<AuHeading @level="2" @skin="2">Verwijderen van berichten</AuHeading>
<p>
  Momenteel is er geen endpoint voorzien om een bericht te verwijderen. Van zodra het bericht correct verwerkt is, propageert dit binnen allerhande systemen en wordt het zeer moeilijk om consistent te verwijderen. Noteer: indien een bepaalde melding gefaald is, kan u steeds dezelfde melding opnieuw insturen.
</p>

<AuHeading @level="2" @skin="2">Ontwikkeling en test</AuHeading>
<p>
  Deze informatie volgt nog.
</p>